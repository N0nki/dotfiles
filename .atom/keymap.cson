# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

# autocomplete
'body atom-text-editor.autocomplete-active':
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'
  'tab': 'autocomplete-plus:move-down'

'atom-text-editor':
  # 行の末尾に移動
  'space l': 'editor:move-to-end-of-line'

'atom-text-editor.vim-mode-plus.insert-mode':
  # jjでinsertを抜ける
  'j j': 'vim-mode-plus:activate-normal-mode'
# emulate vim ex-mode
# https://github.com/atom/vim-mode/issues/50
'.editor.vim-mode-plus:not(.insert-mode)':
  "s": 'unset!'

  ': w enter': 'core:save'
  ': q enter': 'core:close'
  # ': s s enter':  'pane:split-down-and-copy-active-item'
  # ': s v enter':  'pane:split-right-and-copy-active-item'
  's s':  'pane:split-down-and-copy-active-item'
  's v':  'pane:split-right-and-copy-active-item'
  'g c': 'editor:toggle-line-comments' # emulate tomtom/tcooment_vim

  't c': 'atom-vim-like-tab:new' # mean 'tab create'
  ': t a b c': 'atom-vim-like-tab:close'
  # 't p': 'atom-vim-like-tab:previous'
  # 't n': 'atom-vim-like-tab:next'
  # 前のタブへ移動
  'g b': 'pane:show-previous-item'
  'space t': 'atom-vim-like-tab:list'

  # 行の先頭に移動
  'space h': 'vim-mode-plus:move-to-beginning-of-line'
